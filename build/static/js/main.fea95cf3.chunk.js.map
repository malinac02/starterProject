{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","calculate_win.js","index.js"],"names":["Square","value","onClick","className","Board","squares","map","square","i","key","Game","initialBoard","useState","board","setBoard","stepNumber","setStepNumber","xIsNext","setXisNext","winner","combos","length","a","b","c","calculateWinner","currentPlayer","player","result","calculateResult","index","boardCopy","ReactDom","render","document","getElementById"],"mappings":"6MAEA,IAQeA,EARA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACtB,OACE,4BAAQC,UAAU,UAAUD,QAASA,GAClCD,ICOQG,EATD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASH,EAAX,EAAWA,QAAX,OACZ,yBAAKC,UAAU,SACZE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,kBAAC,EAAD,CAAQC,IAAKD,EAAGP,MAAOM,EAAQL,QAAS,kBAAMA,EAAQM,WCgE7CE,EAlEF,WACX,IAAIC,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MADnD,EAEOC,mBAASD,GAFhB,mBAEZE,EAFY,KAELC,EAFK,OAGiBF,mBAAS,GAH1B,mBAGZG,EAHY,KAGAC,EAHA,OAIWJ,oBAAS,GAJpB,mBAIZK,EAJY,KAIHC,EAJG,KAMbC,ECTC,SAAyBd,GAO9B,IANA,IAAMe,EAAS,CACb,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAGXZ,EAAI,EAAGA,EAAIY,EAAOC,OAAQb,IAAK,CACtC,IAAMc,EAAIF,EAAOZ,GAAG,GACde,EAAIH,EAAOZ,GAAG,GACdgB,EAAIJ,EAAOZ,GAAG,GACpB,GAAIH,EAAQiB,IAAMjB,EAAQkB,IAAMlB,EAAQmB,IAClCnB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAIrB,OAAO,KDRMG,CAAgBZ,GAE7B,SAASa,EAAcT,GACrB,OAAgB,IAAZA,EACK,IAEA,IAIX,IAAIU,EAASD,EAAcT,GAiC3B,IAAIW,EAfJ,SAAyBT,EAAQQ,GAE/B,MAAe,MAAXR,EACK,YAGM,MAAXA,EACK,YAEU,IAAfJ,EACK,WAEF,gBAAiBY,EAGbE,CAAgBV,EAAQQ,GAErC,OACE,oCACE,2CACA,kBAAC,EAAD,CAAOtB,QAASQ,EAAOX,QApC3B,SAAqB4B,GACnB,GAAe,OAAXX,GAAoC,OAAjBN,EAAMiB,GAAiB,CAC5C,IAAIC,EAAS,YAAOlB,GACpBkB,EAAUD,GAASJ,EAAcT,GACjCH,EAASiB,GACTf,EAAcD,EAAa,GAC3BG,GAAYD,OA+BZ,yBAAKd,UAAU,gBACX,6BACE,4BAAQA,UAAU,SAASD,QA7BrC,WACEY,EAASH,GACTK,EAAc,GACdE,EAAWD,GAAU,KA0Bb,gBAEF,4BAAKW,ME1DfI,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.fea95cf3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = ({value, onClick}) => {\n  return (\n    <button className=\"squares\" onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square\";\n\nconst Board = ({squares, onClick}) => (\n  <div className=\"board\">\n    {squares.map((square, i) => (\n      <Square key={i} value={square} onClick={() => onClick(i)} />\n    ))}\n  </div>\n);\n\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport { calculateWinner } from \"../calculate_win\";\nimport Board from \"./Board\";\n\nconst Game = () => {\n  let initialBoard = [null, null, null, null, null, null, null, null, null]\n  let [board, setBoard] = useState(initialBoard);\n  let [stepNumber, setStepNumber] = useState(0);\n  let [xIsNext, setXisNext] = useState(true);\n\n  let winner = calculateWinner(board);\n\n  function currentPlayer(xIsNext) {\n    if (xIsNext === true) {\n      return \"X\";\n    } else {\n      return \"O\";\n    }\n  }\n\n  let player = currentPlayer(xIsNext);\n  \n  function handleClick(index) {\n    if (winner === null && board[index] === null) {\n      let boardCopy = [...board];\n      boardCopy[index] = currentPlayer(xIsNext);\n      setBoard(boardCopy);\n      setStepNumber(stepNumber + 1);\n      setXisNext(!xIsNext);\n    }\n  }\n\n  function jumpToStart() {\n    setBoard(initialBoard);\n    setStepNumber(0);\n    setXisNext(xIsNext = true);\n  }\n\n  function calculateResult(winner, player) {\n    let resultString = \"\";\n    if (winner === \"X\") {\n      return \"Winner: X\";\n      \n    }\n    if (winner === \"O\") {\n      return \"Winner: O\";\n    }\n    if (stepNumber === 9) {\n      return \"Tie Game\";\n    }\n    return \"Next Player: \" +player;\n  }\n\n  let result = calculateResult(winner, player)\n\n  return (\n    <>\n      <h1>Tic Tac Toe</h1>\n      <Board squares={board} onClick={handleClick}/> \n      <div className='info-wrapper'>\n          <div>\n            <button className=\"button\" onClick={jumpToStart}>Go to Start</button>\n          </div>\n          <h3>{result}</h3>\n      </div>\n\n    </>\n  );\n};\n\nexport default Game;","\nexport function calculateWinner(squares) {\n  const combos = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    [0, 4, 8], [2, 4, 6]\n  ];\n  \n  for (let i = 0; i < combos.length; i++) {\n    const a = combos[i][0];\n    const b = combos[i][1];\n    const c = combos[i][2];\n    if (squares[a] && squares[b] && squares[c]) {\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  }\n  return null;\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDom.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}